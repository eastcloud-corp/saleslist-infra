version: "3.8"

services:
  database:
    build: ../../../saleslist-backend/database
    container_name: saleslist-database-dev
    environment:
      POSTGRES_DB: saleslist
      POSTGRES_USER: saleslist_user
      POSTGRES_PASSWORD: saleslist_password
    ports:
      - "5434:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - saleslist-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U saleslist_user -d saleslist"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ../../../saleslist-backend
      dockerfile: Dockerfile
    container_name: saleslist-backend-dev
    environment:
      - DATABASE_URL=postgresql://saleslist_user:saleslist_password@database:5432/saleslist
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=saleslist
      - DB_USER=saleslist_user
      - DB_PASSWORD=saleslist_password
      - DEBUG=True
      - SECRET_KEY=django-local-development-key-not-for-production
      - CORS_ALLOW_ALL_ORIGINS=True
    ports:
      - "8002:8000"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - saleslist-network
    volumes:
      - ../../../saleslist-backend:/app
    command: >
      sh -c "
        python manage.py migrate &&
        python seed_data.py &&
        python manage.py runserver 0.0.0.0:8000
      "

  frontend:
    build:
      context: ../../../saleslist-front
      dockerfile: Dockerfile.dev
    container_name: saleslist-frontend-dev
    environment:
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:8002/api/v1
      - NODE_ENV=development
    ports:
      - "3002:3000"
    volumes:
      - ../../../saleslist-front:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - saleslist-network
    stdin_open: true
    tty: true

volumes:
  postgres_data_dev:

networks:
  saleslist-network:
    driver: bridge
